<tabledef>
    <general>
{% if not system.checkaliasesurlcert %}
      <ssl_no_verify>1</ssl_no_verify>
{% endif %}
    </general>
{% set new_style_aliases = 0 %}
{%  if helpers.exists('OPNsense.Firewall.Alias.aliases.alias') %}
{% set new_style_aliases = OPNsense.Firewall.Alias.aliases.alias|length %}
{%    for alias in helpers.toList('OPNsense.Firewall.Alias.aliases.alias') %}
{%      if alias.type.find('port') == -1 %}
    <table>
      <name>{{ alias.name|e }}</name>
      <descr>{{ alias.description|default('')|e}}</descr>
      <type>{{ alias.type }}</type>
{%      if alias.enabled|default('0') == '0'%}
      <address></address>
{%      elif alias.type.startswith('urltable') %}
      <url>{{ alias.content|e|encode_idna }}</url>
{%      elif alias.type.startswith('url') %}
      <aliasurl>{{ alias.content|e|encode_idna }}</aliasurl>
{%      elif alias.content %}
      <address>{{ alias.content|e|encode_idna }}</address>
{%      endif %}{% if alias.interface and alias.type == 'dynipv6host' %}
      <interface>{{ helpers.physical_interface(alias.interface)|default('LAN')}}</interface>
{%      endif %}{% if alias.proto %}
      <proto>{{ alias.proto|e }}</proto>
{%      endif %}{% if alias.updatefreq %}
      <ttl>{{ alias.updatefreq|float * 86400 }}</ttl>
{% elif alias.type in ['geoip', 'asn'] %}
      <ttl>86400</ttl>
{% elif alias.type == 'host' %}
      <ttl>{{ system.aliasesresolveinterval|default('300') }}</ttl>
{% elif alias.type == 'mac' %}
      <ttl>30</ttl>
{% elif alias.type in ['dynipv6host', 'authgroup'] %}
      <ttl>1</ttl>
{%      endif %}
{%      if alias.authtype %}
      <authtype>{{ alias.authtype|e }}</authtype>
{%      if alias.username %}
      <username>{{ alias.username|e }}</username>
{%      endif %}
{%      if alias.password %}
      <password>{{ alias.password|e }}</password>
{%      endif %}
{%      endif %}
    </table>
{%     endif %}
{%   endfor %}
{% endif %}
{%  if not helpers.empty('interfaces') %}
{%      for intf_key,intf_item in interfaces.items() %}
    <table>
        <name>__{{intf_key}}_network</name>
        <descr>{% if intf_item.descr %}{{ intf_item.descr|e }}{% else %}{{intf_key}} net{% endif %}</descr>
        <type>interface_net</type>
        <ttl>1</ttl>
        <interface>{{intf_item.if}}</interface>
    </table>
{%      endfor %}
{%  endif %}
</tabledef>
